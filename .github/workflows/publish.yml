---
name: publish

on:
  push:
    tags:
      - v*

jobs:
  github:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '12'
          registry-url: https://npm.pkg.github.com
          scope: '@${{ github.repository_owner }}'
      - name: Check version
        id: version
        run: |
          echo "::set-output name=name::$(jq -r '.name' package.json)"
          echo "::set-output name=current::$(jq -r '.version' package.json)"
          echo "::set-output name=published::$(npm view $(jq -r '.name' package.json)@$(jq -r '.version' package.json) version)"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Node modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Build
        run: yarn run build
      - name: Publish ${{ steps.version.outputs.name }}@${{ steps.version.outputs.current }}
        if: ${{ endsWith(github.ref, format('v{0}', steps.published-version.outputs.version)) == false }}
        run: npm publish --access restricted
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
